name: 'Accuknox IaC'
description: 'Run Scan against infrastructure as code.'
inputs:
  file:
    description: 'File with infrastructure code or packages to scan'
    required: false
  directory:
    default: '.'
    description: 'Directory with infrastructure code and/or package manager files to scan'
    required: false
  compact:
    description: 'Do not display code blocks in output'
    required: false
  quiet:
    description: 'display only failed checks'
    required: false
  output_format:
    description: 'The format of the output. cli, json, junitxml, github_failed_only, or sarif (comma separated)'
    required: false
    default: 'json'
  output_file_path:
    description: 'Path and name for output file, needs to end with a comma for a single output format'
    required: false
  soft_fail:
    description: 'do not return an error code if there are failed checks'
    required: false
  framework:
    description: 'run only on a specific infrastructure'
    required: false
  skip_framework:
    description: 'skip a specific infrastructure'
    required: false
  github_pat:
    description: 'Environment variable name for a Github personal access token for scanning external modules sourced from private repositories'
    required: false
  enable_secrets_scan_all_files:
    description: 'Scan all files for secrets'
    required: false
  token:
    description: 'The token for authenticating with the CSPM panel.'
    required: true
  tenant_id:
    description: 'The ID of the tenant associated with the CSPM panel.'
    required: true
  endpoint:
    description: 'The URL of the CSPM panel to push the scan results to.'
    required: true
    default: 'cspm.demo.accuknox.com'
    
branding:
  icon: 'shield'
  color: 'purple'

runs:
  using: 'docker'
  image: 'docker://ghcr.io/bridgecrewio/checkov:3.2.21'
  args:
    - ${{ inputs.file }}
    - ${{ inputs.directory }}
    - ${{ inputs.compact }}
    - ${{ inputs.quiet }}
    - ${{ inputs.output_format }}
    - ${{ inputs.output_file_path }}
    - ${{ inputs.soft_fail }}
    - ${{ inputs.framework }}
  env:
    GITHUB_PAT: ${{ inputs.github_pat }}
steps:
    - name: Pushing Results
      run: curl --location --request POST 'https://${{ env.endpoint }}/api/v1/artifact/?tenant_id=${{ env.tenant_id }}&data_type=IAC&save_to_s3=false' --header 'Tenant-Id:${{env.tenant_id}}' --header 'Authorization:Bearer ${{env.token}}' --form 'file=@"./results.json"'
      env:  
        token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzExMTA3NzE3LCJqdGkiOiIxZDNlZTkxOTFiYzY0NGUzOWZmYThhNWNkMDVjNDg3NyIsImlzcyI6ImNzcG0uZGV2LmFjY3Vrbm94LmNvbSJ9.MvxzqTo5lNvg6kdPnIeD2npxtSyd0pZhhwuaxg9XE6o71gy0kIzAiCoYHRXcZamn0YONuDRcqdwHqy4AuFtTOMUlShpq6e9VgbMvRb3meZagw2pHUO7N9AXpD34OZQcX8gtbhBYBttBoAo6ZpTZwgSfc9G7XKa5S8ArMFL2EdzQYGexDeVx4YZDPeGAycAvQTNmeweoraUjBbN9E04nm0t0nyqBmgpoju2hE70hQEYhoWuC0i7LECcvQVm-5qrB30hjySsTk_9hTpnY5YVOd_ncz7FFt_wCv7T9pp2nnOFfq8YviXYSTg1PxO1fFJ3a13bXLDTtD9Zsa70iTzFeBBw"
        endpoint: "cspm.dev.accuknox.com"
        tenant_id: "1069"
